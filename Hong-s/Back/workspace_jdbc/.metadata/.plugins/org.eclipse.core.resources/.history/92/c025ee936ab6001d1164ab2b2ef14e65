package MoviesDAO;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import DTO.MoviesDTO;

// manager > 데이터와 관련된 모든 작업을 총괄하는 클래스 
// DAO 라고 명명함 Data Access Object
// table마다 DAO 가 하나씩 존재

//DTO Data Transfer Object
// 데이터 보관용 클래스 / Value Object = 값 객체 라고도 불림.
public class MoviesDAO {



	// 예외 전가 - throws Exception > 오류발생시 예외처리하지 않음. 예외 발생시 콜한 지점으로 돌아감. main의 경우 오류발생

	private Connection getConnection() throws Exception {
		String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String dbID = "kh";
		String dbPW = "kh";
		Connection con = DriverManager.getConnection(url, dbID, dbPW);
		return con;
	}

	public int insert(String title, String genre) throws Exception {

		//try catch					: 하나 이상의 예외가 발생하고 이를 모두 한가지 로직으로 저리할 경우
		//try catch, catch, catch 	: 여러 종류의 예외들이 발생될 상황일 때에 예외에 따라 각각 처리해야 할 경우
		//try finally				: 실행코드를 완료하거나 예외가 발생했을 시,반드시(무조건) 실행해야 할 코드가 있는경우 
		//try catch finally			: 
		//try with resources		: 
		
		try (Connection con = this.getConnection();
			Statement stat = con.createStatement(); ) 
		{
		String add_movie = "insert into movies values (movies_seq.nextval,'" + title + "','" + genre + "')";
		int result = stat.executeUpdate(add_movie);
		con.commit();
		return result;
		}
		
	}

	public int update(MoviesDTO dto) throws Exception {

		Connection con = this.getConnection();
		Statement stat = con.createStatement();

		String update = "update movies set title = '" + dto.getTitle() + "', genre = '" + dto.getGenre() + "' where id = " + dto.getId();
		int result = stat.executeUpdate(update);
		con.commit();
		con.close();
		return result;
	}

	public int delete(int id) throws Exception {
		Connection con = this.getConnection();
		Statement stat = con.createStatement();

		String del = "delete from movies where id = " + id;
		int result = stat.executeUpdate(del);
		con.commit();
		con.close();
		return result;
	}

	public List<MoviesDTO> selectAll() throws Exception {
		Connection con = this.getConnection();
		Statement stat = con.createStatement();

		String list = "select * from movies";
		ResultSet rs = stat.executeQuery(list);

		List<MoviesDTO> result = new ArrayList<>();

		while (rs.next()) {
			int id = rs.getInt("id");
			String title = rs.getString("title");
			String genre = rs.getString("genre");

			MoviesDTO dto = new MoviesDTO(id, title, genre);
			result.add(dto);

		}
		con.close();
		return result;
	}

	public List<MoviesDTO> search(String title) throws Exception {
		Connection con = this.getConnection();
		Statement stat = con.createStatement();

		String search = "select * from movies where title like '%" + title + "%'";
		ResultSet rs = stat.executeQuery(search);

		List<MoviesDTO> result = new ArrayList<>();

		while (rs.next()) {
			int searchId = rs.getInt("id");
			String searchTitle = rs.getString("title");
			String searchGenre = rs.getString("genre");
			
			MoviesDTO dto = new MoviesDTO(searchId, searchTitle, searchGenre);
			result.add(dto);
			
		}
		con.close();
		return result;
	}
	
	
	public boolean isIdExist (int id) throws Exception{
		Connection con = this.getConnection();
		Statement stat = con.createStatement();
		
		String search = "select id from movies where id ="+ id;
		ResultSet rs = stat.executeQuery(search);
		
		while (rs.next()) {
		int searchId = rs.getInt("id");
			if (searchId == id) {
				return true;
			}
		}
		return false;
		
	}
}










