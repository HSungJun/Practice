package Main;

import java.util.List;
import java.util.Scanner;

import Commons.EncryptionUnits;
import DAO.MemberDAO;
import DAO.MessageDAO;
import DTO.MemberDTO;
import DTO.MessageDTO;

public class main {
	public static void main(String[] args) {

		/*
		 * 게시판 model view 분리 / 사용된 자원은 반드시 close / dbcp 적용 회원가입 패스워드 sha256 / 테이블에 1:1로
		 * maping하는 DAO DTO 작성 / 모든예외 main에 전가 에러안내 메세지 출력
		 * 
		 * 로그인 - 회원가입 - 종료 회원가입 - 아이디 패스워스 이름 연락처
		 * 
		 * 1. 신규 메세지 등록 ( 작성자 > 메세지 직접입력) 2. 메세지 목록 출력 (글번호, 작성자, 글내용, 작성일 (MM/dd) 3.
		 * 메세지 삭제 (seq 으로 삭제) 4. 메세지 수정 (seq 으로 수정하되, writer 및 message 만 수정가능) 5. 메세지 검색
		 * (writer 또는 message 에 검색어 포함대상) 6. 내 정보 보기 0. 시스템 종료
		 * 
		 */

		MemberDAO mdao = new MemberDAO();

		String MemberId = null;
		try (Scanner sc = new Scanner(System.in);) {
			while (true) {
				try {
					System.out.println("<<< 게시판 로그인 >>>");
					System.out.println("1. 로그인");
					System.out.println("2. 회원가입");
					System.out.println("0. 나가기");

					String menu = sc.nextLine();

					if (menu.equals("1")) {
						System.out.println("로그인");

						System.out.print("ID : ");
						String id = sc.nextLine();

						System.out.print("PW : ");
						String pw = EncryptionUnits.sha256(sc.nextLine());

						boolean result = mdao.login(id, pw);
						if (result) {
							System.out.println(id + " 님 로그인 성공");
							MemberId = id;
							break;
						} else {
							System.out.println(" 로그인 실패 ");
						}

					} else if (menu.equals("2")) {

						System.out.println("회원가입");
						String id = "";
						while (true) {
							System.out.print("ID입력 : ");
							id = sc.nextLine();

							boolean result = mdao.idOverlap(id);
							if (result == false) {
								System.out.println("중복 없음");
								break;
							} else if (result == true) {
								System.out.println("ID 선취당함");
							}
						}

						System.out.print("비밀번호 입력 : ");
						String pw = sc.nextLine();

						pw = EncryptionUnits.sha256(pw);

						System.out.print("이름 입력 : ");
						String name = sc.nextLine();

						System.out.println("연락처 입력 : ");
						String contact = sc.nextLine();

						int result = mdao.insert(new MemberDTO(id, pw, name, contact, null));
						if (result > 0) {
							System.out.println("가입완료");
						}

					} else if (menu.equals("0")) {
						System.out.println("시스템 종료");
						System.exit(0);
					} else {
						System.out.println("제시된 메뉴 외 입력불가");
					}

				} catch (Exception e) {
					System.out.println("로그인과정 처리중 오류 발생");
				}
			}

			// ======== 로그인 완료 ===========

			MessageDAO dao = new MessageDAO();
			while (true) {

				try {
					System.out.println("<<<< 게시판 >>>>");
					System.out.println("1. 신규 메세지 등록");
					System.out.println("2. 메세지 목록 출력");
					System.out.println("3. 메세지 삭제 (seq로 검색)");
					System.out.println("4. 메세지 수정 (seq로 검색)");
					System.out.println("5. 메세지 검색 (writer, message 내용검색)");
					System.out.println("6. 내정보 보기");
					System.out.println("0. 시스템 종료");

					String menu = sc.nextLine();

					if (menu.equals("1")) {
						System.out.println("신규 메세지 입력");

						System.out.print("작성자 명 : ");
						String writer = sc.nextLine();

						System.out.print("남길 메세지 : ");
						String message = sc.nextLine();

						int result = dao.insert(writer, message);
						if (result > 0) {
							System.out.println("작성자 " + writer + "의 메세지 입력 완료");
						}

					} else if (menu.equals("2")) {
						System.out.println("입력된 전체 메세지 출력");

						List<MessageDTO> result = dao.messageList();
						System.out.println("글번호 \t 작성자\t 내용\t작성일");
						for (MessageDTO dto : result) {
							System.out.println(dto.getSeq() + "\t" + dto.getWriter() + "\t" + dto.getMessage() + "\t"
									+ dto.getFormedDate());
						}

					} else if (menu.equals("3")) {
						System.out.println("메세지 삭제");
						
						System.out.println("삭제할 seq 번호 : ");
						int seq = Integer.parseInt(sc.nextLine());
						
						int result = dao.delete(seq);
						if (result > 0) {
							System.out.println("삭제완료");
						}else {
							System.out.println("삭제할 메세지를 찾지 못함.");
						}
						
					} else if (menu.equals("4")) {
						System.out.println("메세지 수정");
						
						System.out.print("수정할 메세지의 seq : ");
						int seq = Integer.parseInt(sc.nextLine());
						
						boolean seqExist = dao.seqExist(seq);
						if(!seqExist) {
							System.out.println("해당 "+seq+"가 존재하지 않습니다.");
							continue;
						}
						
						System.out.print("수정할 "+seq+"의 작성자명 : ");
						String writer = sc.nextLine();
						
						System.out.print("수정할 "+seq+ "의 내용 : ");
						String message = sc.nextLine();
						
						MessageDTO dto = new MessageDTO(seq,writer,message,null);
						int result = dao.update(dto);
						if(result > 0) {
							System.out.println("수정 완료");
						} else {
							System.out.println("수정 불가");
						}
						
					} else if (menu.equals("5")) {
						System.out.println("메세지 검색 ()");
						
						
					} else if (menu.equals("6")) {
						
						
					} else if (menu.equals("0")) {
						System.out.println("시스템종료");
						System.exit(0);

					} else {
						System.out.println("메뉴 다시 고르세요");
					}

				} catch (Exception e) {
					e.printStackTrace();
					System.out.println("게시판 오류");
				}
			}
		}
	}

}
