테이블 정의서에 따라 테이블을 생성하고, 요구사항을 충족할 수 있도록 시퀀스를 생성하는 SQL작성 후 정상 결과와 같은 같은 형태로 데이터를 조회하기 위하여, 데이터 삽입, 조회를 수행하였으나 정상처리되지 않는 문제가 발생하였다. SQL구문을 분석하여 요구사항을 충족시키지 못하거나, 정상 결과가 조회되지 않은 원인과, 정상 결과가 조회될 수 있도록 하는 조치내용을 순서대로 작성하시오.
(1. 단, 답안 작성 시 이미 생성된 테이블 또는 시퀀스 구조의 수정이 필요한 경우 ALTER 또는 DROP, 삽입된 데이터의 수정이 필요한 경우 UPDATE 사용해야함. 2. 필요한 조건 수정 후 데이터가 삽입될 수 있도록 쿼리문을 작성 해야함.)

[요구사항]

* 테이블 정의서




* 시퀀스

-- SEQ_BRAND_ID : 100부터 시작하여 100씩 증가, 최대값 1000, 캐쉬 사용 안함.

-- SEQ_PRODUCT_NO : 1부터 시작하여 1씩 증가, 최대값 10000, 캐쉬 사용 안함.

[정상 결과] 

​

[수행 결과]

​

-- [작성한 SQL]

-- BRANDS 테이블 생성

CREATE TABLE BRANDS(

BRAND_ID NUMBER PRIMARY KEY,

BRAND_NAME VARCHAR2(100) NOT NULL

);

-- PRODUCTS 테이블 생성

CREATE TABLE PRODUCTS(

PRODUCT_NO NUMBER PRIMARY KEY,

PRODUCT_NAME VARCHAR2(50) NOT NULL,

PRODUCT_PRICE NUMBER NOT NULL,

BRAND_CODE NUMBER REFERENCES BRANDS,

SOLD_OUT CHAR(1) DEFAULT 'N' CHECK(SOLD_OUT IN ('Y', 'N'))

);

-- SEQ_BRAND_ID 시퀀스 생성

CREATE SEQUENCE SEQ_BRAND_ID

START WITH 100

INCREMENT BY 100

MAXVALUE 500

NOCYCLE;

-- SEQ_PRODUCT_NO 시퀀스 생성

CREATE SEQUENCE SEQ_PRODUCT_NO

START WITH 1

INCREMENT BY 1

MAXVALUE 10000

NOCYCLE;

-- BRANDS 테이블 데이터 삽입

INSERT INTO BRANDS VALUES (SEQ_BRAND_ID.NEXTVAL, '삼성');

INSERT INTO BRANDS VALUES (SEQ_BRAND_ID.CURRVAL, '애플');

-- PRODUCTS 테이블 데이터 삽입

INSERT INTO PRODUCTS VALUES (SEQ_PRODUCT_NO.NEXTVAL, '갤럭시S8', 800000, 100, 'S8','Y');

INSERT INTO PRODUCTS VALUES (SEQ_PRODUCT_NO.NEXTVAL, '갤럭시S9', 900000, 100, 'S9','N');

INSERT INTO PRODUCTS VALUES (SEQ_PRODUCT_NO.NEXTVAL, '갤럭시S10', 1000000, 100, 'S10','N');

INSERT INTO PRODUCTS VALUES (SEQ_PRODUCT_NO.NEXTVAL, '아이폰9S', 900000, 200, '9S','N');

INSERT INTO PRODUCTS VALUES (SEQ_PRODUCT_NO.NEXTVAL, '아이폰10S', 1000000, 200, '10S','N');

-- 결과 조회

SELECT PRODUCT_NAME, PRODUCT_PRICE, SOLD_OUT

FROM PRODUCTS JOIN BRANDS ON (BRAND_ID = BRAND_CODE);




1. products 테이블 생성시 product_name 의 데이터형태입력이 잘못되었다.

2. products 테이블 생성시 serial_no 컬럼을 생성하지 않음.

3. 시퀀스 생성시 sq_brand_id 시퀀스의 최대값을 잘못 입력하였음.

4. 시퀀스 생성시 둘다 캐쉬 사용안함으로 하고자 하였으나 적용하지 않음.

5. brands 테이블 데이터 삽입시 애플 항목에서의 시퀀스를 호출하여 실행할 명령어가 잘못되었음.

6. product 테이블 데이터 삽입시 테이블을 생성하는 과정에서 시리얼 넘버를 입력하지않아 입력과정에서 오류가 발생함.

7. 결과 조회시 select 부분의 원하는 출력값 중 brand_name을 명시하지 않았음. 

또한 brand 데이터의 입력과정에서 '애플' 부분에서 오류가 발생해 아이폰9s, 아이폰 10s 가 입력되지 않아 출력이 불가능 하였음.




1.products 테이블의 product_name 값의 제약조건이 varchar2(20)으로 정의하였으나, 입력시 varchar2(50)으로 입력하여 이를 수정하고자
 alter table products modify product_name varchar2(20); 명령 입력을 통한 제약조건을 변경해 주도록 한다.


2. products 테이블 생성시 serial_no 컬럼값을 입력하지않아 products 테이블 데이터 삽입시에도 문제가 생기기 떄문에 해당 컬럼을 추가해 주어야 한다.

alter table products add (serial_no varchar2(100)); 을 입력하여 해당 제약조건을 가진 컬럼을 추가해준다.



3. 생성된 seq_Brand_Id 의 최댓값의 입력이 잘못되어 이를 수정하고자 

alter sequence SEQ_BRAND_ID maxvalue 1000; 를 통한 시퀀스의 최댓값을 변경해주도록 한다.



4.​생성된 seq_Brand_Id ​및 seq_Product_No 의 조건 중 캐쉬 사용안함을 명시하지 않아 이를 수정해 주고자

alter sequence SEQ_BRAND_ID nocache;​

alter sequence SEQ_product_No nocache; 두 명령을 통한 캐쉬 사용 안함 설정으로 변경해주도록 한다.



5. 시퀀스를 호출하여 데이터를 삽입하기 위해 INSERT INTO BRANDS VALUES (SEQ_BRAND_ID.CURRVAL, '애플');를 사용하였으나 이를 INSERT INTO BRANDS VALUES (SEQ_BRAND_ID.NEXTVAL, '애플'); 로 변경해주어야 한다.



6. 2번에서 products 테이블에 serial_no 컬럼을 추가해 주어 기존의 products 테이블 내 serial_no 값의 입력부분이 뒤로이동되어 데이터의 위치를 수정해 준다.

ex) INSERT INTO PRODUCTS VALUES (SEQ_PRODUCT_NO.NEXTVAL, '갤럭시S8', 800000, 100, 'S8','Y');

>> INSERT INTO PRODUCTS VALUES (SEQ_PRODUCT_NO.NEXTVAL, '갤럭시S8', 800000, 100,'Y',​ 'S8'​);

또는 drop table products; 를 통한 테이블 삭제 후 

다시 순서에 맞도록 테이블을 생성시 serial_no를 추가하여 생성한다. 

CREATE TABLE PRODUCTS(

PRODUCT_NO NUMBER PRIMARY KEY,

PRODUCT_NAME VARCHAR2(50) NOT NULL,

PRODUCT_PRICE NUMBER NOT NULL,

BRAND_CODE NUMBER REFERENCES BRANDS,

SERIAL_NO VARCHAR2(100),

SOLD_OUT CHAR(1) DEFAULT 'N' CHECK(SOLD_OUT IN ('Y', 'N'))

);

이후 기존의 product 테이블 데이터 삽입 방식대로 입력할 경우 해결 할 수 있다.



7. product_name, product_price, brand_name, old_out을 확인하고자 하였으나 결과조회에서 select 이후 brand_name이 제외되어 이를 추가해 주며, 수행결과 아이폰의 데이터가 나오지 않은 이유는 brands 테이블 데이터 삽입시 명령에 오류가 있어 생성되지 않아 product 테이블에서 reference 값이 없는 아이9s 와 아이폰 10s 의 경우 데이터가 생성되지 않아 출력되지 않는다.

5번의 답과 같이 시퀀스 호출시 명령오류를 수정해 줄 경우 parants record 값이 생성되어 product 테이블에도  데이터가 입력되어 정상결과 조회를 얻을 수 있다. 

SELECT PRODUCT_NAME, PRODUCT_PRICE, SOLD_OUT

FROM PRODUCTS JOIN BRANDS ON (BRAND_ID = BRAND_CODE);​