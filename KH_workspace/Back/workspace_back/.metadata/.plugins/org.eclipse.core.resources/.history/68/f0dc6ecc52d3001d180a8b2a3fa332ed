package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import org.apache.tomcat.dbcp.dbcp2.BasicDataSource;

import dto.MessagesDTO;

public class MessagesDAO {

	//인스턴스 생성마다 커넥션풀이 생성됨. 외부로 빼놓을 시 하단 메서드 콜 시 커넥션풀이 재생성되는것을 방지
	private BasicDataSource bds = new BasicDataSource();

	//생성자로 만들어 사용.
	public MessagesDAO () {
		bds.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		bds.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
		bds.setUsername("kh");
		bds.setPassword("kh");
		bds.setInitialSize(10);
	};
	
	private Connection getConnection() throws Exception{
//		Class.forName("oracle.jdbc.driver.OracleDriver");
//		String url = "jdbc:oracle:thin:@localhost:1521:xe";
//		String dbid = "kh";
//		String dbpw = "kh";
//		Connection con = DriverManager.getConnection(url, dbid, dbpw);
//		return con;
		
		//DBCP 운영 / 라이브러리 미삽입 > tomcat 에서는 기본적으로 dbcp라이브러리 내장됨.
		return bds.getConnection();
	}

	public int insert(String writer, String msg) throws Exception {
		String sql = "insert into messages values(messages_seq.nextval,?,?)";
		try (Connection con = this.getConnection();
				PreparedStatement ppst = con.prepareStatement(sql);){
			ppst.setString(1, writer);
			ppst.setString(2, msg);
			int result = ppst.executeUpdate();
			con.commit();
			return result;
		}
	}


	public List<MessagesDTO> selectAll() throws Exception{
		String sql = "select * from messages";
		try (Connection con = this.getConnection();
				PreparedStatement ppst = con.prepareStatement(sql);
				ResultSet rs = ppst.executeQuery();){ 
			//ResultSet은 활성화 중에만 사용 가능. 닫히기 전에 List에 담아 사용함.
			List<MessagesDTO> result = new ArrayList<>();
			while(rs.next()) {
				int id = rs.getInt("id");
				String writer = rs.getString("writer");
				String message = rs.getString("message");
				MessagesDTO dto = new MessagesDTO(id,writer,message);
				result.add(dto); 
			}
			return result;

		}
	}

	public int delete(int delid) throws Exception{
		String sql = "delete from messages where id = ?";
		try (Connection con = this.getConnection();
				PreparedStatement ppst = con.prepareStatement(sql);){
			ppst.setInt(1, delid);
			int result = ppst.executeUpdate();
			con.commit();
			return result;
		}
	}

	public int modify(int modId,String modWriter, String modMessage) throws Exception{
		String sql = "update messages set writer = ?, message = ? where id=?";
		try (Connection con = this.getConnection();
				PreparedStatement ppst = con.prepareStatement(sql);){
			ppst.setString(1, modWriter);
			ppst.setString(2, modMessage);
			ppst.setInt(3, modId);
			int result = ppst.executeUpdate();
			return result;
		}
		
	}



}
